#!/bin/bash

rm /root/foo.txt

cat <<EOF > help.txt
# Your Quest
-------------------------------

By modifying python/challeng.py, node/challenge.js, go/challenge.go, or using gsutil
directly, download the image we've hidden in \$BUCKET_NAME. Using print-png,
view the image, and use a text editor to write your answer in /root/answer.txt.

Feeling stuck? run gsutil --help, or cat help.txt.

Hit the "Check" button when you are done.

Coding Your Solution
-------------------------------

If you run 'ls', you will see folders for each supported language; currently
python, node (JavaScript), and go.

Use 'cd' to enter one of these folders. There will be a file with the name
'code-sample' and a file with the name 'challenge' (with an extension
corresponding to the language you're using).

If you need help getting started, use 'cat' to display the code sample.

Once you're ready to write some code, use vim, nano, or emacs to edit the
challenge file.

Before clicking the "Check" button, run your application with node, go, or
Python.

# Using gsutil
-------------------------------

You will also find the gsutil utility installed, and the environment variable
\$BUCKET_NAME set. Run "gsutil --help" for information about this command.
EOF


cat <<EOF > node/challenge.js
// Imports the Google Cloud client library
const {Storage} = require('@google-cloud/storage')

// Globally unique bucket name (don't change this).
const bucketName = process.env.BUCKET_NAME

// An authenticated storage API client.
const storage = new Storage()

async function downloadImage () {
  // put your code here for downloading the .png image stored in
  // bucketName.
  const [files] = await storage.bucket(bucketName).getFiles();

  files.forEach(file => {
    console.info(file.name)
  });
}

downloadImage()
EOF

cat <<EOF > node/code-sample.js
// Imports the Google Cloud client library
const {Storage} = require('@google-cloud/storage');

// Creates a client
const storage = new Storage();

/**
 * TODO(developer): Uncomment the following lines before running the sample.
 */
// const bucketName = 'Name of a bucket, e.g. my-bucket';
// const srcFilename = 'Remote file to download, e.g. file.txt';
// const destFilename = 'Local destination for file, e.g. ./local/path/to/file.txt';

const options = {
  // The path to which the file should be downloaded, e.g. "./file.txt"
  destination: destFilename,
};

// Downloads the file
await storage
  .bucket(bucketName)
  .file(srcFilename)
  .download(options);

console.log(
  \`gs://${bucketName}/${srcFilename} downloaded to ${destFilename}.\`
);
EOF

cat <<EOF > answer.txt
What was the .png an image of? (On the next line of this file type
one of: horse, television, house, person, dog, orange, pizza).
EOF

cat <<EOF > /usr/local/lib/google-cloud-sdk/bin/check-answer.js
const {readFileSync} = require('fs')
const lines = readFileSync('/root/answer.txt', 'utf8').trim().split('\n')
const lastLine = lines[lines.length - 1].toLowerCase()
if (lastLine !== 'dog') {
    console.error('incorrect answer')
    process.exit(1)
}
EOF

mkdir /root/python

cat <<EOF > python/challenge.py
import os
from google.cloud import storage

"""The bucket has already been created and an additional file has 
   been uploaded.  Download and view the .png file"""

def download_blob():
    storage_client = storage.Client()
    bucket = storage_client.get_bucket(os.environ['BUCKET_NAME'])

    blobs = bucket.list_blobs()

    for blob in blobs:
        print(blob.name)

    # Add code to download the .png file


if __name__ == '__main__':
    download_blob()

EOF

cat <<EOF > python/code-sample.py
def download_blob(bucket_name, source_blog_name, destination_file_name):
    """Downloads an object from the bucket"""
    storage_client = storage.Client()
    bucket = storage_client.get_bucket(bucket_name)
    blob = bucket.blob(source_blob_name)

    blob.download_to_filename(destination_file_name)

    print('Blob {} downloaded to {}'.format(source_blob_name, destination_file_name)
EOF
