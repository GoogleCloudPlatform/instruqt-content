#!/bin/bash
# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# There should be more than zero services deployed
COUNT=$(gcloud run services list --format json | jq length)
if [ "$COUNT" -eq "0" ]; then
  fail-message "No service was deployed."
  exit 1
fi

# The service should be ready to receive requests 
READY=$(gcloud run services list --format json | \
  jq ".[0].status.conditions | \
      map(select( .type == \"Ready\")) | \
      all(.status==\"True\")")
if [ $READY = "false" ]; then
  fail-message "The service is not healthy."
  exit 1
fi

# The service should allow public access
SERVICE_NAME=$(gcloud run services list --format json | jq -r .[0].metadata.name)
gcloud run services get-iam-policy $SERVICE_NAME | grep allUsers
if [ $? -ne 0 ]; then 
    fail-message "The service should allow public access: \"--allow-unauthenticated\". If you update access policy of the service, be patient, it can take some time."
    exit 1
fi

COUNT_200=$(gcloud logging read \
"httpRequest.status=200 AND \
resource.type=\"cloud_run_revision\" AND \
resource.labels.service_name=\"$SERVICE_NAME\"" --format=json | jq length)
if [ "$COUNT_200" -eq "0" ]; then
    fail-message "Expected a HTTP request to the service: did you call the URL?"
    exit 1
fi

