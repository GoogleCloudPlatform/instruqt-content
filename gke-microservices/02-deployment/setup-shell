#!/bin/bash
# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo "export IMAGE=" >> /root/.bashrc

cat <<EOF > /root/.instruqt/help.txt

In the 'challenge' namespace you previously created, create a Deployment called 'frontend-deployment' that runs a single Pod with the 
'us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0' image. This image name is also stored in the environment variable 'IMAGE'.

The Pod should be labeled with 'role = frontend'.

There is a partial file called deployment.yaml that has been created for you to use.

EOF

cat <<EOF > /root/.instruqt/hint.txt

Open the 'deployment.yaml' file that was created for you.

For the namespace, use 'challenge'. This tells Kubernetes which namespace to deploy to.
For the metadata name, use 'frontend-deployment'. This determins the name of the Deployment.
For replicas, use '1'. This tells Kubernetes how many copies of your app to run.
For the matchLabels, use 'role: frontend'. This tells Kubernetes what pods this Deployment controls.
For the template metadata labels, use 'role: frontend'. This gives the Pods created by this Deployment the label 'role = frontend'.
For the image, use 'us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0'. This tells the Pods which Docker container to run.

Create the deployment by running:

kubectl apply -f deployment.yaml

EOF

set-workdir /home

cat <<EOF > /home/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: <?>
  name: <?>
spec:
  replicas: <?>
  selector:
    matchLabels:
      <?>: <?>
  template:
    metadata:
      labels:
        <?>: <?>
    spec:
      containers:
      - image: us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0
        name: app
        ports:
          - name: http
            containerPort: 3000
EOF