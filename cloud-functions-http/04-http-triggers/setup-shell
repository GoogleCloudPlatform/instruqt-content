#!/bin/bash
# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
if [ -f /home/function.go ]; then
  export FUNCTION=HelloHTTP
  export RUNTIME=go111
fi

if [ -f /home/index.js ]; then
  export FUNCTION=helloHttp
  export RUNTIME=nodejs8
fi

if [ -f /home/main.py ]; then
  export FUNCTION=hello_http
  export RUNTIME=python37
fi

export U=$(gcloud functions describe ${FUNCTION} --format json | jq -r '.httpsTrigger.url')

cat <<EOF > /root/.instruqt/.customenv
export URL=$U
EOF

source /root/.instruqt/.translationsenv

cat <<EOF > /root/.instruqt/help.txt
Let's go back to the function that you deployed

Use "curl -o result.txt <URL>" or another method to call your HTTP function and store the result in a file called "result.txt"

Note: You can get your function's URL with the "gcloud functions describe" command
EOF
cat <<EOF > /root/.instruqt/hint.txt

The function you want to call is called $FUNCTION

You can get more details about this function, including the url, by running this command:


gcloud functions describe $FUNCTION


You can parse the URL from this response by using the JSON output format with jq


gcloud functions describe $FUNCTION --format json | jq -r '.httpsTrigger.url'


This will reuturn the URL which you can use:

$U


This has been saved as an environment variable called URL for you
EOF

set-workdir /home