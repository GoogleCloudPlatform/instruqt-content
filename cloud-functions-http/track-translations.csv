key,en,pt,es,zh-tw,ko,zh-cn,zh-hk
slug,cloud-functions-http,cloud-functions-http-pt,cloud-functions-http-es,cloud-functions-http-zh-tw,cloud-functions-http-ko,cloud-functions-http-zh-cn,cloud-functions-http-zh-hk
teaser,Event-driven serverless compute platform,Plataforma de computação sem servidor orientada a eventos,Plataforma informática sin servidor basada en eventos,事件導向的無伺服器運算平台,이벤트 기반 서버리스 컴퓨팅 플랫폼,事件驱动型无服务器计算平台,以活動為本的無伺服器運算平台
description,"Google Cloud Functions is a serverless execution environment for building and connecting cloud services. With Cloud Functions you write simple, single-purpose functions that are attached to events emitted from your cloud infrastructure and services. Your function is triggered when an event being watched is fired. Your code executes in a fully managed environment. There is no need to provision any infrastructure or worry about managing any servers.\n\nCloud Functions can be written using JavaScript (Node.js 6.14.0, Node.js 8.14.0), Python (Python 3.7.1), or Go (Go 1.11) runtimes on Google Cloud Platform. You can take your function and run it in any standard Node.js 6, Node.js 8, Python, or Go runtime, which makes both portability and local testing a breeze.","O Google Cloud Functions é um ambiente de execução sem servidor destinado a criar e conectar serviços de nuvem. Com o Cloud Functions, você escreve funções simples e de finalidade única que são vinculadas a eventos emitidos pelos serviços e pela infraestrutura em nuvem. Sua função é acionada quando um evento em análise é disparado. Seu código é executado em um ambiente totalmente gerenciado. Não há necessidade de provisionar infraestruturas ou se preocupar em gerenciar servidores.\n\nAs Funções do Cloud podem ser escritas usando os ambientes de execução do JavaScript (Node.js 6.14.0 e Node.js 8.14.0), Python (Python 3.7.1) ou Go (Go 1.11) no Google Cloud Platform. É possível executar sua função em qualquer ambiente padrão do Node.js 6, Node.js 8, Python ou Go, o que facilita a portabilidade e a realização de testes locais.","Google Cloud Functions es un entorno de ejecución sin servidor en el que crear y conectar servicios en la nube. Permite escribir funciones sencillas para un solo fin que estén vinculadas a los eventos que se emiten en tu infraestructura y tus servicios en la nube. Las funciones se activan cuando tiene lugar un evento que se esté monitorizando. Tu código se ejecuta en un entorno totalmente gestionado. No es necesario que aprovisiones ninguna infraestructura ni que dediques tu tiempo a gestionar servidores.\n\nLas funciones de Cloud Functions se pueden escribir mediante los entornos de ejecución de JavaScript (Node.js 6.14.0 y Node.js 8.14.0), Python (Python 3.7.1) o Go (Go 1.11) en Google Cloud Platform. Tus funciones son compatibles con cualquier entorno de ejecución estándar Node.js 6, Node.js 8, Python o Go, así que podrás transferirlas y hacer pruebas locales con gran facilidad.",Google Cloud Functions 是用來建構及連結雲端服務的無伺服器執行環境。有了 Cloud Functions，您可以編寫簡單的單一用途函式，並將其附加至您雲端基礎架構和服務產生的事件。一旦監控的事件發生，就會觸發您的函式。您的程式碼會在全代管環境中執行。您不需要佈建任何基礎架構，也不需要擔心管理伺服器的問題。\n\nCloud Functions 可在 Google Cloud Platform 上，使用 JavaScript (Node.js 6.14.0、Node.js 8.14.0)、Python (Python 3.7.1) 或 Go (Go 1.11) 執行階段編寫。只要在任何標準 Node.js 6、Node.js 8、Python 或 Go 執行階段中執行函式，就能兼顧優異的可攜性和本機測試便利性。,"Google Cloud Functions는 클라우드 서비스를 빌드 및 연결하기 위한 서버리스 실행 환경입니다. Cloud Functions를 사용하면 클라우드 인프라와 서비스에서 발생하는 이벤트에 연결되는 단일 목적의 간단한 함수를 작성할 수 있습니다. 함수는 감시 중인 이벤트 발생 시 트리거됩니다. 코드는 완전 관리형 환경에서 실행되므로 인프라를 프로비저닝하거나 서버를 관리할 필요가 없습니다.\n\nCloud Functions는 자바스크립트(Node.js 6.14.0, Node.js 8.14.0), Python(Python 3.7.1) 또는 Go(Go 1.11) 런타임을 사용하여 Google Cloud Platform에서 작성할 수 있습니다. 함수를 표준 Node.js 6, Node.js 8, Python 또는 Go 런타임에서 실행할 수 있으므로 이동성과 로컬 테스트가 모두 간편합니다.",Google Cloud Functions 是一种无服务器执行环境，专门用于构建和连接云服务。借助 Cloud Functions，您可以编写单一用途的简单函数，并将这些函数与您的云基础架构和服务发出的事件相关联。一旦发生监控的事件，就会触发您的函数。您的代码会在完全托管的环境中执行，您无需预配任何基础架构，也不必费心管理任何服务器。\n\nCloud Functions 可使用 JavaScript（Node.js 6.14.0、Node.js 8.14.0）、Python (Python 3.7.1) 或 Go (Go 1.11) 语言编写，并在 Google Cloud Platform 上的适用运行时环境（如上所示）下运行。您可以编写自己的函数，然后在任何标准的 Node.js 6、Node.js 8、Python 或 Go 运行时环境下运行它，兼具了可移植性与本地测试的便利性。,「Google 雲端功能」是無伺服器的執行環境，用以建立和連接雲端服務。您可透過「雲端功能」，編寫聯繫雲端架構和服務發出活動的簡單單一用途功能。受觀察活動發出後，便會觸發您的功能。您的程式碼會於受全面管理的環境内執行。您無需佈建架構或為管理伺服器而擔心。\n\n透過「Google 雲端平台」上的 JavaScript (Node.js 6.14.0、Node.js 8.14.0)、Python (Python 3.7.1) 或 Go (Go 1.11) 執行階段即可編寫「雲端功能」。您可採用您的功能，並於任何標準 Node.js 6、Node.js 8、Python 或 Go 執行階段執行，這有效提高可攜性，並令本地測試更加簡單。
writing-functions-assignment,"We have **provided you with a function** written in the different languages (Node.js, Python and Go) that are supported by Google Cloud Functions.\n\nOpen one of the functions using your favourite editor (vi, vim, nano or install your own) and change it so it returns **Hello, Google!** instead of Hello, World!.","**Disponibilizamos a você uma função** escrita em diferentes linguagens (Node.js, Python e Go) que são compatíveis com o Google Cloud Functions.\n\nAbra uma das funções usando o editor de sua preferência: vi, vim ou nano. Como alternativa, instale seu próprio editor. Em seguida, altere-o para que ele retorne **Hello, Google!** em vez de “Hello, World!”.","Te hemos **proporcionado una función** escrita en diferentes lenguajes (Node.js, Python y Go) compatibles con Google Cloud Functions.\n\nAbre una de tus funciones con tu editor favorito (Vi, Vim, Nano o instala tu propio editor) y modifícala para que devuelva el mensaje **Hello, Google!** en lugar de ""Hello, World!"".","我們已**為您提供一個函式**，該函式是以 Google Cloud Functions 支援的不同語言 (Node.js、Python 和 Go) 所編寫。\n\n請使用您慣用的編輯工具 (vi、vim、nano 或安裝您自已的工具) 開啟其中一個函式，然後變更其內容，使其傳回 **Hello, Google!** 而非 Hello, World!。","Google Cloud Functions에서 지원하는 다양한 언어(Node.js, Python, Go)로 작성된 **함수를 제공**합니다.\n\n즐겨 사용하는 편집기(vi, vim, nano 또는 자체 설치)를 사용해 함수 중 하나를 열고 Hello, World! 대신 **Hello, Google!**을 반환하도록 코드를 변경해 보세요.","我们为您提供了一个使用 Google Cloud Functions 支持的不同语言（Node.js、Python 和 Go）编写的**函数**。\n\n您可以使用喜欢的编辑器（vi、vim、nano 或安装自己的编辑器）打开其中一个函数并进行更改，让它返回 **Hello, Google!**，而非“Hello, World!”。","我們**已為您提供一個功能**，此功能以「Google 雲端功能」支援的不同語言 (Node.js、Python 和 Go) 編寫。\n\n您可使用喜歡的編輯器 (vi、vim、nano 或自行安裝編輯器) 開啟其中一個功能，並作出變更，使其以「**Hello, Google!**」而非「Hello, World!」回應。"
writing-functions-1,Google Cloud Functions is a **serverless execution environment** for building and connecting cloud services. \n\nWith Cloud Functions you write **simple single-purpose functions**. These functions are **attached to events** emitted from your cloud infrastructure and services.,"O Google Cloud Functions é um **ambiente de execução sem servidor** destinado a criar e conectar serviços de nuvem. \n\nCom o Cloud Functions, você escreve **funções simples de finalidade única**. Elas são **vinculadas a eventos** emitidos pelos serviços e pela infraestrutura em nuvem.",Google Cloud Functions es un **entorno de ejecución sin servidor** en el que crear y conectar servicios en la nube. \n\nPermite escribir **funciones sencillas con objetivos determinados**. Dichas funciones están **vinculadas a eventos** que emiten tu infraestructura y tus servicios en la nube.,Google Cloud Functions 是用來建構及連結雲端服務的**無伺服器執行環境**。\n\n有了 Cloud Functions，您可以編寫**簡單的單一用途函式**。這些函式可**附加至您雲端基礎架構和服務產生的事件**。,Google Cloud Functions는 클라우드 서비스를 빌드 및 연결하기 위한 **서버리스 실행 환경**입니다. \n\nCloud Functions를 사용하면 **단일 목적의 간단한 함수**를 작성하고 이러한 함수를 클라우드 인프라와 서비스에서 발생하는 **이벤트에 연결**할 수 있습니다.,Google Cloud Functions 是一种**无服务器执行环境**，专门用于构建和连接云服务。\n\n使用 Cloud Functions 编写**单一用途的简单函数**。这些函数将与您的云基础架构和服务发出的**事件**相关联。,「Google 雲端功能」是**無伺服器的執行環境**，用以建立和連接雲端服務。\n\n您可透過「雲端功能」編寫**簡單單一用途功能**。這些功能**聯繫了雲端架構和服務發出的活動**。
writing-functions-2,Your function is **triggered when an event being watched is fired**.\n\nYour code executes in a **fully managed environment**. There is **no need to provision any infrastructure** or worry about managing any servers.,Sua função é **acionada quando um evento em análise é disparado**.\n\nSeu código é executado em um **ambiente totalmente gerenciado**. **Não há necessidade de provisionar infraestruturas** ou se preocupar em gerenciar servidores.,Las funciones **se activan cuando tiene lugar un evento que se esté monitorizando**.\n\nTu código se ejecuta en un **entorno totalmente gestionado**. **No es necesario que aprovisiones ninguna infraestructura** ni que dediques tu tiempo a gestionar servidores.,**一旦監控的事件發生，就會觸發**您的函式。\n\n您的程式碼會在**全代管環境**中執行。您**不需要佈建任何基礎架構**，也不需要擔心管理伺服器的問題。,**감시 중인 이벤트가 발생하면 함수가 트리거**됩니다.\n\n코드는 **완전 관리형 환경**에서 실행되므로 **인프라를 프로비저닝**하거나 서버를 관리할 필요가 없습니다.,一旦发生监控的事件，就会**触发您的函数**。\n\n您的代码会在**完全托管的环境**中执行，您**无需预配任何基础架构**，也不必费心管理任何服务器。,**受觀察活動發出後，便會觸發**您的功能。\n\n您的程式碼會於**受全面管理的環境**内執行。您**無需佈建架構**或為管理伺服器而擔心。
writing-functions-3,"Cloud Functions can be written using JavaScript, Python or Go. \n\nYou can take your function and run it in a **Node.js 8**, **Python 3.7.1**, or **Go 1.11** runtime, which makes both **portability and local testing a breeze**.","As Funções do Cloud podem ser escritas usando JavaScript, Python ou Go. \n\nÉ possível executar sua função em um ambiente do **Node.js 8**, **Python 3.7.1** ou **Go 1.11**, o que **facilita a portabilidade e a realização de testes locais**.","Las funciones de Cloud Functions se pueden escribir con JavaScript, Python o Go. \n\nTus funciones son compatibles con entornos de ejecución **Node.js 8**, **Python 3.7.1** o **Go 1.11**, así que podrás **transferirlas y hacer pruebas locales con gran facilidad**.",Cloud Functions 可以使用 JavaScript、Python 或 Go 編寫。\n\n只要在 **Node.js 8**、**Python 3.7.1** 或 **Go 1.11** 執行階段中執行函式，就能兼顧優異的**可攜性和本機測試便利性**。,"Cloud Functions는 JavaScript, Python 또는 Go를 사용하여 작성할 수 있습니다. \n\n함수를 **Node.js 8**, **Python 3.7.1** 또는 **Go 1.11** 런타임에서 실행할 수 있으므로 **이동성과 로컬 테스트가 모두 간편합니다**.",Cloud Functions 可以使用 JavaScript、Python 或 Go 编写。\n\n您可以编写自己的函数，然后在 **Node.js 8**、**Python 3.7.1** 或 **Go 1.11** 运行时环境下运行它，兼具了**可移植性与本地测试**的便利性。,您可使用 JavaScript、Python 或 Go 編寫「雲端功能」。\n\n您可採用您的功能，並於**Node.js 8**、**Python 3.7.1**或**Go 1.11**執行階段執行，這**有效提高可攜性，並令本地測試更加簡單**。
deploying-functions-assignment,"Using the **gcloud command-line tool**, deploy your function. \n\nTo deploy a Cloud Function, your code must contain a method with the same `name` as the Cloud Function.\n\nThe function should **trigger on http** requests.\n\nNote: Deploying a function can take a few minutes.","Implante sua função usando a **ferramenta de linha de comando gcloud**. \n\nPara implantar uma Função do Cloud, seu código precisa conter um método que tenha o mesmo nome dela.\n\nA função precisará **ser acionada em solicitações HTTP**.\n\nObservação: implantar uma função pode levar alguns minutos.","Usa la **herramienta de línea de comandos gcloud** para desplegar tus funciones. \n\nSi quieres desplegar una función de Cloud Functions, tu código deberá contener un método con el mismo nombre (“name”) que la propia función.\n\nLa función debería **activarse con solicitudes HTTP**.\n\nNota: Los despliegues de funciones pueden durar unos minutos.",您可以使用 **gcloud 指令列工具**來部署您的函式。\n\n如要部署 Cloud 函式，您的程式碼必須包含與 Cloud 函式具有相同「名稱」的方法。\n\n該函式應**在收到 http 要求時觸發**。\n\n附註：部署函式可能需要幾分鐘的時間。,**gcloud 명령줄 도구**를 사용하여 함수를 배포하세요. \n\nCloud 함수를 배포하려면 코드에 포함된 메서드의 'name'이 Cloud 함수와 동일해야 합니다.\n\n함수는 **http 요청 시 트리거**됩니다.\n\n참고: 함수 배포에 몇 분이 소요될 수 있습니다.,使用 **gcloud 命令行工具**部署您的函数。\n\n要部署云端函数，您的代码必须包含与该云端函数具有相同“名称”的方法。\n\n函数应由 **http 请求触发**。\n\n注意：函数的部署可能需要几分钟时间。,使用**gcloud 指令列工具**部署功能。要部署「雲端功能」，您的代碼必須包含與「雲端功能」擁有相同「名稱」的方法。\n\n該功能應**受 http 要求所觸發**。\n\n注意：部署功能可能需時幾分鐘。
direct-triggers-assignment,Let's have some fun! We have deployed a function called 'cowsay' in your project. Call this function using the gcloud CLI,Vamos nos divertir! Implantamos uma função chamada “cowsay” no seu projeto. Chame-a usando a CLI do gcloud,"¡Hora de divertirse! Hemos desplegado una función con el nombre ""cowsay"" en tu proyecto. Haz una llamada a ella con la interfaz de línea de comandos gcloud.",現在我們來測試看看吧！我們已在您的專案中部署了一個名為「cowsay」的函式。請使用 gcloud CLI 呼叫這個函式。,재미있는 실습 시간: 프로젝트에서 'cowsay'라는 함수를 배포했습니다. gcloud CLI를 사용하여 이 함수를 호출해 보세요.,让我们来做点有趣的事情吧！我们已经在您的项目中部署了一个名为“cowsay”的函数。使用 gcloud CLI 调用此函数,來享受當中的樂趣！我們在您的項目中部署了名為「cowsay」的功能。使用 gcloud CLI 執行此功能
direct-triggers-1,"To support **quick iteration and debugging**, Cloud Functions provide a `gcloud functions call` command.\n\nThis allows you to **directly invoke** a function to ensure it is behaving as expected. \n\nThis causes the function to execute immediately, even though it may have been deployed to respond to a specific event.","Para permitir que a **iteração e a depuração sejam rápidas**, as Funções do Cloud fornecem um comando “gcloud functions call”.\n\nAssim, é possível **invocar diretamente** uma função para garantir que ela esteja se comportando como esperado. \n\nComo consequência, a função é executada imediatamente, mesmo que ela tenha sido implantada para responder a um evento específico.","Para que **la iteración y la depuración sean rápidas**, Cloud Functions proporciona el comando “gcloud functions call”.\n\nEste comando permite **invocar directamente** una función para comprobar si funciona del modo esperado. \n\nPara ello, la función se ejecuta inmediatamente, incluso si se ha desplegado para que responda a un evento específico.",為了支援**快速疊代和除錯**，Cloud Functions 提供了「gcloud functions call」指令。\n\n這個指令可讓您**直接叫用**函式，以確保它如預期般運作。\n\n這樣可使函式立即執行，即使它可能已為因應特定事件而經過部署也是如此。,**빠른 반복과 디버깅**을 지원하기 위해 Cloud Functions는 `gcloud functions call` 명령어를 제공합니다.\n\n이를 통해 함수를 **직접 호출**하여 예상대로 동작하는지 확인할 수 있습니다. \n\n또한 특정 이벤트에 응답하도록 배포된 함수라도 이 명령어를 사용하면 즉시 실행됩니다.,为了支持**快速迭代和调试**，Cloud Functions 提供了一条“gcloud functions call”命令。\n\n此命令可让您**直接调用**函数，确保其按预期运行。\n\n如此调用会让函数立即执行，即使是为了响应特定事件而部署的函数也会如此。,為了支援**快速迭代和偵錯**，「雲端功能」提供「雲端功能執行」指令。\n\n您可**直接調用**功能，以確保其如常運作。\n\n即使功能的部署可能為回應指定活動，這仍將令功能立即執行。
http-triggers-assignment,Use **curl -o result.txt <URL>** or another method to call your HTTP function and store the result in a file called **result.txt** \n\n Note: You can get your function's URL with the `gcloud functions describe` command,Use **curl -o result.txt <URL>** ou outro método para chamar sua função HTTP e armazene o resultado em um arquivo denominado **result.txt**. \n\n Observação: é possível saber o URL da sua função por meio do comando “gcloud functions describe”,"Utiliza el comando **curl -o result.txt <URL>** u otro método para llamar a la función HTTP y almacenar el resultado en un archivo **result.txt**.\n\nNota: Puedes obtener las URL de tus funciones mediante el comando ""gcloud functions describe"".",使用 **curl -o result.txt <URL>** 或其他方法來呼叫您的 HTTP 函式，並將結果儲存在名為 **result.txt** 的檔案中\n\n附註：您可以使用「gcloud functions describe」指令取得函式的網址,**curl -o result.txt <URL>** 또는 다른 메서드를 사용하여 HTTP 함수를 호출하고 **result.txt**라는 파일에 결과를 저장하세요. \n\n 참고: `gcloud functions describe` 명령어로 함수의 URL을 가져올 수 있습니다.,使用 **curl -o result.txt <URL>** 或其他方法调用 HTTP 函数，并将结果存储在一个名为 **result.txt** 的文件中\n\n注意：您可以通过“gcloud functions describe”命令获取函数的网址,使用**curl -o result.txt <URL>**或其他方法，執行您的 HTTP 功能，並將結果儲存至名為**result.txt**的檔案 \n\n注意：您可使用「gcloud 功能描述」指令，取得功能的網址