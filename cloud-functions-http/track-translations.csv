key,en,zh-tw,ko
slug,cloud-functions-http,cloud-functions-http-zh-tw,cloud-functions-http-ko
teaser,Event-driven serverless compute platform,事件導向的無伺服器運算平台,이벤트 기반 서버리스 컴퓨팅 플랫폼
description,"Google Cloud Functions is a serverless execution environment for building and connecting cloud services. With Cloud Functions you write simple, single-purpose functions that are attached to events emitted from your cloud infrastructure and services. Your function is triggered when an event being watched is fired. Your code executes in a fully managed environment. There is no need to provision any infrastructure or worry about managing any servers.\n\nCloud Functions can be written using JavaScript (Node.js 6.14.0, Node.js 8.14.0), Python (Python 3.7.1), or Go (Go 1.11) runtimes on Google Cloud Platform. You can take your function and run it in any standard Node.js 6, Node.js 8, Python, or Go runtime, which makes both portability and local testing a breeze.",Google Cloud Functions 是用來建構及連結雲端服務的無伺服器執行環境。有了 Cloud Functions，您可以編寫簡單的單一用途函式，並將其附加至您雲端基礎架構和服務產生的事件。一旦監控的事件發生，就會觸發您的函式。您的程式碼會在全代管環境中執行。您不需要佈建任何基礎架構，也不需要擔心管理伺服器的問題。\n\nCloud Functions 可在 Google Cloud Platform 上，使用 JavaScript (Node.js 6.14.0、Node.js 8.14.0)、Python (Python 3.7.1) 或 Go (Go 1.11) 執行階段編寫。只要在任何標準 Node.js 6、Node.js 8、Python 或 Go 執行階段中執行函式，就能兼顧優異的可攜性和本機測試便利性。,"Google Cloud Functions는 클라우드 서비스를 빌드 및 연결하기 위한 서버리스 실행 환경입니다. Cloud Functions를 사용하면 클라우드 인프라와 서비스에서 발생하는 이벤트에 연결되는 단일 목적의 간단한 함수를 작성할 수 있습니다. 함수는 감시 중인 이벤트 발생 시 트리거됩니다. 코드는 완전 관리형 환경에서 실행되므로 인프라를 프로비저닝하거나 서버를 관리할 필요가 없습니다.\n\nCloud Functions는 자바스크립트(Node.js 6.14.0, Node.js 8.14.0), Python(Python 3.7.1) 또는 Go(Go 1.11) 런타임을 사용하여 Google Cloud Platform에서 작성할 수 있습니다. 함수를 표준 Node.js 6, Node.js 8, Python 또는 Go 런타임에서 실행할 수 있으므로 이동성과 로컬 테스트가 모두 간편합니다."
writing-functions-assignment,"We have **provided you with a function** written in the different languages (Node.js, Python and Go) that are supported by Google Cloud Functions.\n\nOpen one of the functions using your favourite editor (vi, vim, nano or install your own) and change it so it returns **Hello, Google!** instead of Hello, World!.","我們已**為您提供一個函式**，該函式是以 Google Cloud Functions 支援的不同語言 (Node.js、Python 和 Go) 所編寫。\n\n請使用您慣用的編輯工具 (vi、vim、nano 或安裝您自已的工具) 開啟其中一個函式，然後變更其內容，使其傳回 **Hello, Google!** 而非 Hello, World!。","Google Cloud Functions에서 지원하는 다양한 언어(Node.js, Python, Go)로 작성된 **함수를 제공**합니다.\n\n즐겨 사용하는 편집기(vi, vim, nano 또는 자체 설치)를 사용해 함수 중 하나를 열고 Hello, World! 대신 **Hello, Google!**을 반환하도록 코드를 변경해 보세요."
writing-functions-1,Google Cloud Functions is a **serverless execution environment** for building and connecting cloud services. \n\nWith Cloud Functions you write **simple single-purpose functions**. These functions are **attached to events** emitted from your cloud infrastructure and services.,Google Cloud Functions 是用來建構及連結雲端服務的**無伺服器執行環境**。\n\n有了 Cloud Functions，您可以編寫**簡單的單一用途函式**。這些函式可**附加至您雲端基礎架構和服務產生的事件**。,Google Cloud Functions는 클라우드 서비스를 빌드 및 연결하기 위한 **서버리스 실행 환경**입니다. \n\nCloud Functions를 사용하면 **단일 목적의 간단한 함수**를 작성하고 이러한 함수를 클라우드 인프라와 서비스에서 발생하는 **이벤트에 연결**할 수 있습니다.
writing-functions-2,Your function is **triggered when an event being watched is fired**.\n\nYour code executes in a **fully managed environment**. There is **no need to provision any infrastructure** or worry about managing any servers.,**一旦監控的事件發生，就會觸發**您的函式。\n\n您的程式碼會在**全代管環境**中執行。您**不需要佈建任何基礎架構**，也不需要擔心管理伺服器的問題。,**감시 중인 이벤트가 발생하면 함수가 트리거**됩니다.\n\n코드는 **완전 관리형 환경**에서 실행되므로 **인프라를 프로비저닝**하거나 서버를 관리할 필요가 없습니다.
writing-functions-3,"Cloud Functions can be written using JavaScript, Python or Go. \n\nYou can take your function and run it in a **Node.js 8**, **Python 3.7.1**, or **Go 1.11** runtime, which makes both **portability and local testing a breeze**.",Cloud Functions 可以使用 JavaScript、Python 或 Go 編寫。\n\n只要在 **Node.js 8**、**Python 3.7.1** 或 **Go 1.11** 執行階段中執行函式，就能兼顧優異的**可攜性和本機測試便利性**。,"Cloud Functions는 JavaScript, Python 또는 Go를 사용하여 작성할 수 있습니다. \n\n함수를 **Node.js 8**, **Python 3.7.1** 또는 **Go 1.11** 런타임에서 실행할 수 있으므로 **이동성과 로컬 테스트가 모두 간편합니다**."
deploying-functions-assignment,"Using the **gcloud command-line tool**, deploy your function. \n\nTo deploy a Cloud Function, your code must contain a method with the same `name` as the Cloud Function.\n\nThe function should **trigger on http** requests.\n\nNote: Deploying a function can take a few minutes.",您可以使用 **gcloud 指令列工具**來部署您的函式。\n\n如要部署 Cloud 函式，您的程式碼必須包含與 Cloud 函式具有相同「名稱」的方法。\n\n該函式應**在收到 http 要求時觸發**。\n\n附註：部署函式可能需要幾分鐘的時間。,**gcloud 명령줄 도구**를 사용하여 함수를 배포하세요. \n\nCloud 함수를 배포하려면 코드에 포함된 메서드의 'name'이 Cloud 함수와 동일해야 합니다.\n\n함수는 **http 요청 시 트리거**됩니다.\n\n참고: 함수 배포에 몇 분이 소요될 수 있습니다.
direct-triggers-assignment,Let's have some fun! We have deployed a function called 'cowsay' in your project. Call this function using the gcloud CLI,現在我們來測試看看吧！我們已在您的專案中部署了一個名為「cowsay」的函式。請使用 gcloud CLI 呼叫這個函式。,재미있는 실습 시간: 프로젝트에서 'cowsay'라는 함수를 배포했습니다. gcloud CLI를 사용하여 이 함수를 호출해 보세요.
direct-triggers-1,"To support **quick iteration and debugging**, Cloud Functions provide a `gcloud functions call` command.\n\nThis allows you to **directly invoke** a function to ensure it is behaving as expected. \n\nThis causes the function to execute immediately, even though it may have been deployed to respond to a specific event.",為了支援**快速疊代和除錯**，Cloud Functions 提供了「gcloud functions call」指令。\n\n這個指令可讓您**直接叫用**函式，以確保它如預期般運作。\n\n這樣可使函式立即執行，即使它可能已為因應特定事件而經過部署也是如此。,**빠른 반복과 디버깅**을 지원하기 위해 Cloud Functions는 `gcloud functions call` 명령어를 제공합니다.\n\n이를 통해 함수를 **직접 호출**하여 예상대로 동작하는지 확인할 수 있습니다. \n\n또한 특정 이벤트에 응답하도록 배포된 함수라도 이 명령어를 사용하면 즉시 실행됩니다.
http-triggers-assignment,Use **curl -o result.txt <URL>** or another method to call your HTTP function and store the result in a file called **result.txt** \n\n Note: You can get your function's URL with the `gcloud functions describe` command,使用 **curl -o result.txt <URL>** 或其他方法來呼叫您的 HTTP 函式，並將結果儲存在名為 **result.txt** 的檔案中\n\n附註：您可以使用「gcloud functions describe」指令取得函式的網址,**curl -o result.txt <URL>** 또는 다른 메서드를 사용하여 HTTP 함수를 호출하고 **result.txt**라는 파일에 결과를 저장하세요. \n\n 참고: `gcloud functions describe` 명령어로 함수의 URL을 가져올 수 있습니다.